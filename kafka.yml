apiVersion: v1
kind: ServiceAccount
metadata:
  name: kafka
  namespace: default
  labels:
    app: kf
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: view-statefulsets
  namespace: default
rules:
  - apiGroups: ["apps"]
    resources: ["statefulsets"]
    verbs: ["list", "get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: view-statefulsets-by-sa
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: view-statefulsets
subjects:
  - kind: ServiceAccount
    name: kafka
    namespace: default
  - kind: ServiceAccount
    name: zookeeper
    namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: kf-s
  labels:
    app: kf
spec:
  type: NodePort
  ports:
    - name: kafka
      port: 9092
  selector:
    app: kf
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kf
spec:
  selector:
    matchLabels:
      app: kf
  serviceName: kf-s
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      labels:
        app: kf
    spec:
      serviceAccountName: kafka
      containers:
        - name: kubernetes-kafka
          imagePullPolicy: Never
          image: "zerodowntime/kafka"
          resources:
            requests:
              memory: "500Mi"
              cpu: "0.5"
          # lifecycle:
          #   postStart:
          #     exec:
          #       command: ["/opt/post-start.sh"]
          #   preStop:
          #     exec:
          #       command: ["/opt/post-start.sh"]
          # readinessProbe:
          #   exec:
          #     command:
          #       - "/opt/readiness-probe.sh"
          #   initialDelaySeconds: 30
          #   timeoutSeconds: 10
          # livenessProbe:
          #   exec:
          #     command:
          #       - "/opt/liveness-probe.sh"
          #   initialDelaySeconds: 60
          #   timeoutSeconds: 10
          ports:
            - containerPort: 9092
              name: kafka
          volumeMounts:
            - name: logs
              mountPath: /var/log/kafka
  volumeClaimTemplates:
    - metadata:
        name: logs
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 100Mi
